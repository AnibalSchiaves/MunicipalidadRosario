<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"	
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd"
		>

	
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Configures the Spring MVC @Controller programming model -->

    <!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->

	<annotation-driven content-negotiation-manager="contentNegotiationManager" />
	<beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <beans:property name="favorPathExtension" value="false" />
	</beans:bean>



	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Configures a handler for serving static resources by forwarding to the Servlet container's default Servlet. -->
	<default-servlet-handler />
	

	
	<!-- Creates the JSR-303 Validator -->
	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<!-- The default is "/WEB-INF/views.xml".  
		<beans:property name="location" value="/WEB-INF/spring-excel-views.xml" />
		-->
	</beans:bean>
	
	<!-- Thymeleaf template resolver -->
	<beans:bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
	<!-- 
  		<beans:property name="suffix" value=".html" />
  		<beans:property name="prefix" value="/thymeleaf/" />
	 -->
	 <!-- 
	 	<beans:property name="characterEncoding" value="UTF-8" />
	  -->
  		<beans:property name="templateMode" value="HTML5" />
		<beans:property name="cacheable" value="false" />
	</beans:bean>
	
	<!-- Thymeleaf Template Engine -->
	   <beans:bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
	       <beans:property name="templateResolver" ref="templateResolver" />
	       <beans:property name="additionalDialects">
	           <beans:set>
	               <beans:bean class="org.thymeleaf.extras.tiles2.dialect.TilesDialect"/>
	               	              
	               <beans:bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect" /> 
	           </beans:set>
<!-- 
	               <bean class="org.thymeleaf.extras.conditionalcomments.dialect.ConditionalCommentsDialect"/>
 -->
	       </beans:property>
	   </beans:bean>
	
	<!-- Resolves logical view names returned by Controllers to Tiles; a view name to resolve is treated as the name of a tiles definition -->
	<beans:bean id="tilesViewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
	 	<!-- 
	 	<beans:property name="characterEncoding" value="UTF-8" />
	 	 -->
		<beans:property name="viewClass" value="org.thymeleaf.extras.tiles2.spring4.web.view.ThymeleafTilesView"/>
		<beans:property name="templateEngine" ref="templateEngine"/>
	</beans:bean>
	
	 
	<!-- Configures the Tiles layout system using a specific thymeleaf-enabled Tiles Configurer -->
	<beans:bean id="tilesConfigurer" class="org.thymeleaf.extras.tiles2.spring4.web.configurer.ThymeleafTilesConfigurer">
		<beans:property name="definitions"  value="/WEB-INF/tiles-thymeleaf.xml" />
	</beans:bean>	

<!-- 
	<beans:bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
		<beans:property name="templateEngine" ref="templateEngine" />
		<beans:property name="viewNames" value="thymeleaf/*" />
		<beans:property name="order" value="1" />
	</beans:bean>
 -->



	<!-- Configures transaction management around @Transactional components -->
	<!-- 
	<tx:annotation-driven />

	 -->
	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="defaultErrorView" value="error"/>
		<beans:property name="warnLogCategory" value="ar.gov.rosario.administracionweb.administracionweb"/>
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <beans:property name="maxUploadSize" value="10000000"/>
	</beans:bean>


 
	

	<!-- Imports the application controllers that process client requests -->
	<beans:import resource="controllers.xml" />

</beans:beans>